# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build:

    # Specify the Xcode version to use
    macos:
      xcode: "10.2.1"
      shell: /bin/bash --login -eo pipefail
    working_directory: ~/Sport1Player
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      PROJECT_NAME: "Sport1Player"

    steps:
      
      - checkout
      - run:
          name: Git - submodules update
          command: |
            git fetch
            git checkout .
            git submodule sync --recursive
            git submodule update --init

            echo 'export SUBMODULES_MD5_STRING=$(git submodule status | openssl md5)' >> $BASH_ENV

      # Git
      - restore_cache:
          name: CocoaPods - Restore Cache
          keys:
            - Sport1Player-pods-{{ .Branch }}-{{ .Revision }}-{{ .Environment.version_id }}
            - Sport1Player-pods-{{ .Branch }}-{{ .Revision }}-
            - Sport1Player-pods-{{ .Branch }}-
            - Sport1Player-pods-

      # Install Bundler
      - run:
          name: Install Bundler
          command: bundler install

      # CocoaPods - First
      - restore_cache:
          name: CocoaPods - Restore Cache
          keys:
            - Sport1Player-pods-{{ checksum "Podfile.lock" }}
            - Sport1Player-pods-

      - run:
          name: CocoaPods - Version
          command: bundle exec pod --version

      - run:
          name: NPM Token
          command: npx npm-shell-login

      # CocoaPods - Second
      - run:
          name: CocoaPods - Update Dependencies
          command: bundle exec pod update

      - save_cache:
          name: CocoaPods - Save Cache
          key: Sport1Player-pods-{{ checksum "Podfile.lock" }}
          paths:
            - "~/.cocoapods"
            - "Pods"
            - "Podfile.lock"

      # Tests
      - run:
          name: Tests - Start
          command: bundle exec fastlane ios test 

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: scan-test-results
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs

      # Jazzy
      #- run:
      #  name: Making Documentation
      #  command: make documentation